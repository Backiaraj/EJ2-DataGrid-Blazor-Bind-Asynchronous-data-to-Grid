@page "/"

@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Navigations
@using BlazorApp1.Data
@inject WeatherForecastService http

    <EjsGrid @ref="DefaultGrid" AllowPaging="true" DataSource="@forecasts" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })">
        <GridEditSettings AllowEditing="true" AllowDeleting="true" AllowAdding="true" Mode="@EditMode.Normal"></GridEditSettings>
        <GridColumns>
            <GridColumn Field=@nameof(WeatherForecast.OrderID) HeaderText="ID" IsPrimaryKey="true" TextAlign="@TextAlign.Center" Width="140"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.EmployeeID) HeaderText="Postal Code" AllowEditing="true" Type="ColumnType.Number" Width="140" TextAlign="@TextAlign.Right"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.Freight) HeaderText="Freight" EditType="EditType.NumericEdit" Format="C2" Width="140" TextAlign="@TextAlign.Right"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.CustomerID) EditType="EditType.DropDownEdit" HeaderText="Customer Name" Width="150">
            </GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.OrderDate) HeaderText="Order Date" EditType="EditType.DatePickerEdit" Format="yMd" Type="ColumnType.Date" Width="160"></GridColumn>
        </GridColumns>
    </EjsGrid>
@code{
    EjsGrid<WeatherForecast> DefaultGrid;
    WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await http.GetForecastAsync();
    }
}

